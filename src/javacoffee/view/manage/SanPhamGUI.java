/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javacoffee.view.manage;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javacoffee.bus.DanhMuc_BUS;
import javacoffee.bus.SanPham_BUS;
import javacoffee.pojo.DanhMuc_pojo;
import javacoffee.pojo.SanPham_pojo;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kikkdt (KietDt)
 */
public class SanPhamGUI extends javax.swing.JPanel {

    private DefaultTableModel dtm;
    private ArrayList<DanhMuc_pojo> lstDanhMuc = new DanhMuc_BUS().getList();
    private ArrayList<SanPham_pojo> lstSanPham = new SanPham_BUS().getList();

    public SanPhamGUI() {
        initComponents();
        loadTableSanPham();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogSanPham = new javax.swing.JDialog();
        jPanel7 = new javax.swing.JPanel();
        lblSanPham = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cbDanhMuc = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btnChooserHinh = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtGiaBan = new javax.swing.JTextField();
        lblHinhAnh = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        pnlSanPham = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtTongSo = new javax.swing.JLabel();

        dialogSanPham.setTitle("Quản lý Món ăn/ Thức uống");
        dialogSanPham.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/logo-icon.png"))
        );
        dialogSanPham.setMinimumSize(new java.awt.Dimension(525, 500));
        dialogSanPham.setResizable(false);
        dialogSanPham.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                dialogSanPhamWindowClosing(evt);
            }
        });

        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(149, 87, 29), 2, true));
        jPanel7.setMaximumSize(new java.awt.Dimension(490, 400));
        jPanel7.setMinimumSize(new java.awt.Dimension(490, 400));
        jPanel7.setPreferredSize(new java.awt.Dimension(490, 400));

        lblSanPham.setBackground(new java.awt.Color(149, 87, 29));
        lblSanPham.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblSanPham.setForeground(new java.awt.Color(255, 255, 255));
        lblSanPham.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSanPham.setText("Thêm Món ăn/ Thức uống");
        lblSanPham.setOpaque(true);

        txtTenSP.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTenSP.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtTenSP.setToolTipText("Nhập tên món ăn/ thức uống");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(96, 56, 19));
        jLabel13.setLabelFor(txtTenSP);
        jLabel13.setText("Tên món:");

        cbDanhMuc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbDanhMuc.setToolTipText("Chọn danh mục");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(96, 56, 19));
        jLabel14.setLabelFor(cbDanhMuc);
        jLabel14.setText("Danh mục:");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(96, 56, 19));
        jLabel15.setLabelFor(btnChooserHinh);
        jLabel15.setText("Hình ảnh:");

        btnChooserHinh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnChooserHinh.setText("Chọn hình ảnh");
        btnChooserHinh.setToolTipText("Chọn hình ảnh");
        btnChooserHinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooserHinhActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(96, 56, 19));
        jLabel16.setLabelFor(txtGiaBan);
        jLabel16.setText("Giá bán:");

        txtGiaBan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtGiaBan.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtGiaBan.setToolTipText("Nhập giá bán");

        lblHinhAnh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblHinhAnh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHinhAnh.setLabelFor(btnChooserHinh);
        lblHinhAnh.setText("Chưa chọn hình ảnh");
        lblHinhAnh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblHinhAnh.setMaximumSize(new java.awt.Dimension(241, 160));
        lblHinhAnh.setMinimumSize(new java.awt.Dimension(241, 35));
        lblHinhAnh.setPreferredSize(new java.awt.Dimension(241, 35));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(6, 6, 6)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbDanhMuc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(lblHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChooserHinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtTenSP, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtGiaBan))
                .addGap(20, 20, 20))
            .addComponent(lblSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(lblSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnChooserHinh, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(lblHinhAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(148, Short.MAX_VALUE))
        );

        btnSave.setBackground(new java.awt.Color(149, 87, 29));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-save-24.png"))); // NOI18N
        btnSave.setText("Lưu");
        btnSave.setToolTipText("Lưu");
        btnSave.setBorderPainted(false);
        btnSave.setIconTextGap(10);

        btnCancel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(96, 56, 19));
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-cancel-24.png"))); // NOI18N
        btnCancel.setText("Thoát");
        btnCancel.setToolTipText("Thoát");
        btnCancel.setIconTextGap(10);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogSanPhamLayout = new javax.swing.GroupLayout(dialogSanPham.getContentPane());
        dialogSanPham.getContentPane().setLayout(dialogSanPhamLayout);
        dialogSanPhamLayout.setHorizontalGroup(
            dialogSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogSanPhamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogSanPhamLayout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave)))
                .addContainerGap())
        );
        dialogSanPhamLayout.setVerticalGroup(
            dialogSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogSanPhamLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dialogSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        setMinimumSize(new java.awt.Dimension(1024, 500));
        setPreferredSize(new java.awt.Dimension(1024, 500));

        pnlSanPham.setMinimumSize(new java.awt.Dimension(1024, 500));
        pnlSanPham.setPreferredSize(new java.awt.Dimension(1024, 500));

        jPanel3.setBackground(new java.awt.Color(149, 87, 29));
        jPanel3.setMinimumSize(new java.awt.Dimension(793, 45));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        btnThem.setBackground(new java.awt.Color(149, 87, 29));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-add-24.png"))); // NOI18N
        btnThem.setToolTipText("Thêm");
        btnThem.setBorderPainted(false);
        btnThem.setFocusable(false);
        btnThem.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnThem.setLabel("Thêm");
        btnThem.setMaximumSize(new java.awt.Dimension(100, 35));
        btnThem.setMinimumSize(new java.awt.Dimension(100, 35));
        btnThem.setPreferredSize(new java.awt.Dimension(100, 35));
        btnThem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel3.add(btnThem);

        btnSua.setBackground(new java.awt.Color(149, 87, 29));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pencil-drawing-24.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setToolTipText("Sửa");
        btnSua.setBorderPainted(false);
        btnSua.setFocusable(false);
        btnSua.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnSua.setMaximumSize(new java.awt.Dimension(100, 35));
        btnSua.setMinimumSize(new java.awt.Dimension(100, 35));
        btnSua.setPreferredSize(new java.awt.Dimension(100, 35));
        btnSua.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel3.add(btnSua);

        btnXoa.setBackground(new java.awt.Color(149, 87, 29));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-minus-24.png"))); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.setToolTipText("Xóa");
        btnXoa.setBorderPainted(false);
        btnXoa.setFocusable(false);
        btnXoa.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnXoa.setMaximumSize(new java.awt.Dimension(100, 35));
        btnXoa.setMinimumSize(new java.awt.Dimension(100, 35));
        btnXoa.setPreferredSize(new java.awt.Dimension(100, 35));
        btnXoa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel3.add(btnXoa);

        jPanel5.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 2, 2, new java.awt.Color(149, 87, 29)));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setLabelFor(txtSearch);
        jLabel5.setText("Tìm Món: ");
        jLabel5.setToolTipText("Tìm Món");

        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-search-24.png"))); // NOI18N
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jScrollPane2.setBorder(null);

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSanPham.setOpaque(false);
        jScrollPane2.setViewportView(tblSanPham);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Tổng số Món ăn/ Thức uống:");

        txtTongSo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTongSo.setText("...");
        txtTongSo.setMaximumSize(new java.awt.Dimension(100, 20));
        txtTongSo.setMinimumSize(new java.awt.Dimension(100, 20));
        txtTongSo.setPreferredSize(new java.awt.Dimension(100, 20));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(277, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addContainerGap(277, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTongSo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTongSo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlSanPhamLayout = new javax.swing.GroupLayout(pnlSanPham);
        pnlSanPham.setLayout(pnlSanPhamLayout);
        pnlSanPhamLayout.setHorizontalGroup(
            pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlSanPhamLayout.setVerticalGroup(
            pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSanPhamLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1024, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(pnlSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(pnlSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        if ("performed".equalsIgnoreCase(btnSave.getActionCommand()) || (txtTenSP.getText().isBlank() && txtGiaBan.getText().isBlank())) {
            dialogSanPham.dispose();
        } else {
            int chosen = JOptionPane.showConfirmDialog(null, "Món ăn/ thức uống chưa được lưu. Bạn có muốn lưu không?", "Thông báo", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
            if (chosen == JOptionPane.NO_OPTION) {
                dialogSanPham.dispose();
            } else if (chosen == JOptionPane.YES_OPTION) {
                btnSave.doClick();
                if ("performed".equalsIgnoreCase(btnSave.getActionCommand())) {
                    dialogSanPham.dispose();
                }
            }
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void dialogSanPhamWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_dialogSanPhamWindowClosing
        if ("performed".equalsIgnoreCase(btnSave.getActionCommand()) || (txtTenSP.getText().isBlank() && txtGiaBan.getText().isBlank())) {
            dialogSanPham.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        } else {
            int chosen = JOptionPane.showConfirmDialog(null, "Món ăn/ thức uống chưa được lưu. Bạn có muốn lưu không?", "Thông báo", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
            switch (chosen) {
                case JOptionPane.NO_OPTION:
                    dialogSanPham.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
                    break;
                case JOptionPane.CANCEL_OPTION:
                    dialogSanPham.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
                    break;
                case JOptionPane.YES_OPTION:
                    btnSave.doClick();
                    if ("performed".equals(btnSave.getActionCommand())) {
                        dialogSanPham.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
                    }
                    break;
                default:
                    break;
            }
        }
    }//GEN-LAST:event_dialogSanPhamWindowClosing

    private void loadCbDanhMuc() {
        lstDanhMuc = new DanhMuc_BUS().getList();
        if (lstDanhMuc.isEmpty()) {
            return;
        }
        cbDanhMuc.removeAllItems();
        lstDanhMuc.forEach(danhmuc -> cbDanhMuc.addItem(danhmuc.getTenDanhMuc()));
    }

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        lblSanPham.setText("Thêm Món ăn/ thức uống");
        txtTenSP.setText("");
        btnChooserHinh.setActionCommand("inserted");
        lblHinhAnh.setText("Chưa chọn hình ảnh");
        lblHinhAnh.setIcon(null);
        lblHinhAnh.setPreferredSize(new Dimension(241, 35));
        loadCbDanhMuc();

        if (btnSave.getActionListeners().length != 0) {
            for (ActionListener item : btnSave.getActionListeners()) {
                btnSave.removeActionListener(item);
            }
        }
        btnSave.addActionListener((ActionEvent e) -> {
            String hinhAnh = null;
            try {
                String tenSP = txtTenSP.getText().trim();
                if (btnChooserHinh.getActionCommand().equalsIgnoreCase("selected")) {
                    String targetPath = "src/javacoffee/view/upload";
                    File srcPathImage = fileChooser.getSelectedFile();
                    hinhAnh = srcPathImage.getName();
                    //Copy file to project
                    Files.copy(srcPathImage.toPath(), new File(targetPath + "/" + hinhAnh).toPath(), StandardCopyOption.REPLACE_EXISTING);
                    fileChooser.setSelectedFile(new File(""));
                }
                String giaBan = txtGiaBan.getText().trim();
                int maDanhMuc = new DanhMuc_BUS().getMaDanhMuc(cbDanhMuc.getSelectedItem().toString());
                if (new SanPham_BUS().insert(tenSP, hinhAnh, giaBan, maDanhMuc) > 0) {
                    JOptionPane.showMessageDialog(null, "Thêm món thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    dialogSanPham.dispose();
                    btnSave.setActionCommand("performed");
                    loadTableSanPham();
                }
            } catch (IOException ex) {
                Logger.getLogger(SanPhamGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
        dialogSanPham.getRootPane().setDefaultButton(btnSave);
        dialogSanPham.setLocationRelativeTo(null);
        dialogSanPham.setModal(true);
        dialogSanPham.setVisible(true);
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (tblSanPham.getSelectedRowCount() == 1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn 1 món ăn/ thức uống để sửa thông tin.", "Lỗi", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("/error.png")));
        } else {
            loadCbDanhMuc();
            int index = tblSanPham.getSelectedRow();
            lblSanPham.setText("Cập nhật Món ăn/ thức uống");
            dtm = (DefaultTableModel) tblSanPham.getModel();
            int maSP = Integer.parseInt(dtm.getValueAt(index, 0).toString());
            txtTenSP.setText(dtm.getValueAt(index, 1).toString());
            lblHinhAnh.setIcon(new ImageIcon(new ImageIcon(getClass().getResource("/" + dtm.getValueAt(index, 2))).getImage().getScaledInstance(241, 160, Image.SCALE_SMOOTH)));
            lblHinhAnh.setPreferredSize(new Dimension(241, 160));
            lblHinhAnh.setText("");
            btnChooserHinh.setActionCommand("notselected");
            String giaBan = dtm.getValueAt(index, 3).toString();
            txtGiaBan.setText(new StringBuilder(giaBan).deleteCharAt(giaBan.indexOf(".")).toString());
            cbDanhMuc.setSelectedItem(dtm.getValueAt(index, 4).toString());
            if (btnSave.getActionListeners().length != 0) {
                for (ActionListener item : btnSave.getActionListeners()) {
                    btnSave.removeActionListener(item);
                }
            }
            btnSave.addActionListener((ActionEvent e) -> {
                int maDanhMuc = new DanhMuc_BUS().getMaDanhMuc(cbDanhMuc.getSelectedItem().toString());
                String hinhAnh = dtm.getValueAt(index, 2).toString();
                if (btnChooserHinh.getActionCommand().equalsIgnoreCase("selected")) {
                    hinhAnh = fileChooser.getSelectedFile().getName();
                    //Save file to project
                    try {
                        String targetPath = "src/javacoffee/view/upload";
                        File srcPathImage = fileChooser.getSelectedFile();
                        //Copy file to project
                        Files.copy(srcPathImage.toPath(), new File(targetPath + "/" + srcPathImage.getName()).toPath(), StandardCopyOption.REPLACE_EXISTING);
                        fileChooser.setSelectedFile(new File(""));
                    } catch (IOException ex) {
                        Logger.getLogger(SanPhamGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                if (new SanPham_BUS().update(maSP, txtTenSP.getText().trim(), hinhAnh, txtGiaBan.getText().trim(), maDanhMuc) > 0) {
                    JOptionPane.showMessageDialog(null, "Cập nhật món thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    dialogSanPham.dispose();
                    btnSave.setActionCommand("performed");
                    loadTableSanPham();
                }
            });

            dialogSanPham.getRootPane().setDefaultButton(btnSave);
            dialogSanPham.setLocationRelativeTo(null);
            dialogSanPham.setModal(true);
            dialogSanPham.setVisible(true);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int[] rowSelected = tblSanPham.getSelectedRows();
        if (rowSelected.length == 0)
            JOptionPane.showMessageDialog(null, "Vui lòng chọn ít nhất 1 món để xóa.", "Lỗi", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("/error.png")));
        else {
            dtm = (DefaultTableModel) tblSanPham.getModel();
            int chosen = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xoá " + rowSelected.length + " bàn không?", "Thông báo", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION);
            if (chosen == JOptionPane.YES_OPTION) {
                SanPham_BUS sp = new SanPham_BUS();
                int rowAffected = 0;
                for (int i = 0; i < rowSelected.length; i++) {
                    if (sp.delete(Integer.parseInt(dtm.getValueAt(rowSelected[i], 0).toString())) > 0) {
                        rowAffected++;
                    }
                }
                if (rowAffected == rowSelected.length) {
                    JOptionPane.showMessageDialog(null, "Xoá thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
                loadTableSanPham();
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private JFileChooser fileChooser;
    private void btnChooserHinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooserHinhActionPerformed
        fileChooser = new JFileChooser(FileSystemView.getFileSystemView()) {
            @Override
            public void approveSelection() {
                super.approveSelection();
                if (fileChooser.getSelectedFile().exists()) {
                    lblHinhAnh.setIcon(new ImageIcon(new ImageIcon(fileChooser.getSelectedFile().getAbsolutePath()).getImage().getScaledInstance(241, 160, Image.SCALE_SMOOTH)));
                    lblHinhAnh.setPreferredSize(new Dimension(241, 160));
                    lblHinhAnh.setText("");
                    btnChooserHinh.setActionCommand("selected");
                }
            }
        };
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Only Image Files", "jpg", "png", "gif", "jpeg");
        fileChooser.setFileFilter(filter);
        fileChooser.showOpenDialog(SanPhamGUI.this);
    }//GEN-LAST:event_btnChooserHinhActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        String strSearch = "^.*" + txtSearch.getText().toLowerCase() + ".*$";
        dtm = (DefaultTableModel) tblSanPham.getModel();
        dtm.setRowCount(0);
        DanhMuc_BUS danhmuc = new DanhMuc_BUS();
        lstSanPham.stream().filter(sp -> (String.valueOf(sp.getMaSanPham()).matches(strSearch) || sp.getTenSanPham().toLowerCase().matches(strSearch) || String.valueOf(sp.getGiaBan()).matches(strSearch) || danhmuc.getTenDanhMuc(sp.getMaDanhMuc()).toLowerCase().matches(strSearch))).forEachOrdered(sp -> {
            dtm.addRow(new Object[]{
                sp.getMaSanPham(),
                sp.getTenSanPham(),
                sp.getHinhAnh() != null ? sp.getHinhAnh() : "no-data.png",
                String.format("%,.0f", sp.getGiaBan()),
                danhmuc.getTenDanhMuc(sp.getMaDanhMuc())
            });
        });
    }//GEN-LAST:event_txtSearchKeyReleased

    private void loadTableSanPham() {
        lstSanPham = new SanPham_BUS().getList();
        if (lstSanPham.isEmpty()) {
            return;
        }

        tblSanPham.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        tblSanPham.getTableHeader().setReorderingAllowed(false);
        tblSanPham.setRowHeight(24);
        tblSanPham.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        tblSanPham.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        //Set DefaultTableModel & add header table
        tblSanPham.setModel(new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        });
        tblSanPham.getModel().addTableModelListener((e) -> {
            txtTongSo.setText(tblSanPham.getRowCount() + "");
        });

        dtm = (DefaultTableModel) tblSanPham.getModel();
        dtm.setColumnCount(0);
        dtm.setRowCount(0);
        dtm.addColumn("Mã Sản phẩm");
        dtm.addColumn("Tên Sản phẩm");
        dtm.addColumn("Hình ảnh");
        dtm.addColumn("Giá bán");
        dtm.addColumn("Danh mục");
        tblSanPham.setRowHeight(60);
        tblSanPham.getColumnModel().getColumn(2).setCellRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                ImageIcon icon = new ImageIcon(getClass().getResource("/" + value.toString()));
                Image image = icon.getImage();
                Image newImage = image.getScaledInstance(90, 60, Image.SCALE_SMOOTH);
                icon = new ImageIcon(newImage);
                return new JLabel(icon);
            }

        });

        //Setting column width & turn off resizable
        tblSanPham.getColumnModel().getColumn(0).setMinWidth(150);
        tblSanPham.getColumnModel().getColumn(0).setMaxWidth(150);
        for (int i = 0; i < 5; i++) {
            tblSanPham.getColumnModel().getColumn(i).setResizable(false);
        }
        tblSanPham.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);

        DanhMuc_BUS danhmuc = new DanhMuc_BUS();
        if (danhmuc.getList().isEmpty()) {
            return;
        }
        lstSanPham.forEach(sp -> {
            dtm.addRow(new Object[]{
                sp.getMaSanPham(),
                sp.getTenSanPham(),
                sp.getHinhAnh() != null ? sp.getHinhAnh() : "no-data.png",
                String.format("%,.0f", sp.getGiaBan()),
                danhmuc.getTenDanhMuc(sp.getMaDanhMuc())
            });
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnChooserHinh;
    protected javax.swing.JButton btnSave;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbDanhMuc;
    private javax.swing.JDialog dialogSanPham;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblHinhAnh;
    private javax.swing.JLabel lblSanPham;
    private javax.swing.JPanel pnlSanPham;
    private javax.swing.JTable tblSanPham;
    protected javax.swing.JTextField txtGiaBan;
    private javax.swing.JTextField txtSearch;
    protected javax.swing.JTextField txtTenSP;
    private javax.swing.JLabel txtTongSo;
    // End of variables declaration//GEN-END:variables
}
